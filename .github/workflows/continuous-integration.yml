name: Continuous integration
on:
  pull_request:
  push:
    branches:
      - master
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: "JDK ${{ matrix.java }} on ${{ matrix.os }} with Error Prone ${{ matrix.epVersion }}"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            java: 8
            epVersion: 2.4.0
          - os: ubuntu-latest
            java: 11
            epVersion: 2.4.0
          - os: macos-latest
            java: 11
            epVersion: 2.19.1
          - os: ubuntu-latest
            java: 11
            epVersion: 2.19.1
          - os: windows-latest
            java: 11
            epVersion: 2.19.1
          - os: ubuntu-latest
            java: 17
            epVersion: 2.19.1
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out NullAway sources
        uses: actions/checkout@v3
      - name: 'Set up JDK 17 on Windows'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        if: matrix.os == 'windows-latest'
      - name: 'Set up JDK ${{ matrix.java }}'
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
      - name: Build and test using Java 8 and Error Prone ${{ matrix.epVersion }}
        env:
          ORG_GRADLE_PROJECT_epApiVersion: ${{ matrix.epVersion }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
        if: matrix.java == '8'
      - name: Build and test using Java 11 and Error Prone ${{ matrix.epVersion }}
        env:
          ORG_GRADLE_PROJECT_epApiVersion: ${{ matrix.epVersion }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: verGJF build
        if: matrix.java == '11'
      - name: Build and test using Java 17 and Error Prone ${{ matrix.epVersion }}
        env:
          ORG_GRADLE_PROJECT_epApiVersion: ${{ matrix.epVersion }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x :sample-app:build -x :jar-infer:jar-infer-lib:build -x :jar-infer:nullaway-integration-test:build -x :jar-infer:test-java-lib-jarinfer:build
        if: matrix.java == '17'
      - name: Report jacoco coverage
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_epApiVersion: ${{ matrix.epVersion }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        with:
          arguments: coveralls
        continue-on-error: true
        if: runner.os == 'Linux' && matrix.java == '11' && matrix.epVersion == '2.19.1' && github.repository == 'uber/NullAway'
      - name: Test publishToMavenLocal flow
        env:
          ORG_GRADLE_PROJECT_epApiVersion: ${{ matrix.epVersion }}
          ORG_GRADLE_PROJECT_VERSION_NAME: '0.0.0.1-LOCAL'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocal -x signMavenPublication -x signShadowPublication
        if: matrix.java == '8'
      - name: Check that Git tree is clean after build and test
        run: ./.buildscript/check_git_clean.sh
  publish_snapshot:
    name: 'Publish snapshot'
    needs: [build]
    if: github.event_name == 'push' && github.repository == 'uber/NullAway' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
      - name: 'Set up JDK 8'
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'temurin'
      - name: 'Publish'
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_mavenCentralRepositoryUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralRepositoryPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
        with:
          arguments: clean publish --no-daemon --no-parallel
