name: Continuous integration
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  build:
    name: "JDK ${{ matrix.java }} on ${{ matrix.os }} with Error Prone ${{ matrix.epVersion }}"
    strategy:
      matrix:
        include:
          - os: macos-latest
            java: 8
            epVersion: 2.4.0
          - os: macos-latest
            java: 11
            epVersion: 2.4.0
          - os: ubuntu-latest
            java: 8
            epVersion: 2.4.0
          - os: ubuntu-latest
            java: 8
            epVersion: 2.7.1
          - os: ubuntu-latest
            java: 11
            epVersion: 2.4.0
          - os: windows-latest
            java: 8
            epVersion: 2.4.0
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out NullAway sources
        uses: actions/checkout@v2
      - name: 'Set up JDK ${{ matrix.java }}'
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Build and test using Gradle, Java 8, and Error Prone ${{ matrix.epVersion }}
        env:
          ORG_GRADLE_PROJECT_epApiVersion: ${{ matrix.epVersion }}
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: verGJF build -x :jmh:test
        if: matrix.java == '8'
      - name: Build and test using Gradle and Java 11
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: :nullaway:test :jmh:test
        if: matrix.java == '11'
      - name: Report jacoco coverage
        uses: eskatos/gradle-command-action@v1
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        with:
          arguments: jacocoTestReport coverallsJacoco
        continue-on-error: true
        if: runner.os == 'Linux' && matrix.java == '8' && matrix.epVersion == '2.4.0' && github.repository == 'uber/NullAway'
      - name: Check that Git tree is clean after build and test
        run: ./.buildscript/check_git_clean.sh
  publish_snapshot:
    name: 'Publish snapshot'
    needs: [build]
    if: github.event_name == 'push' && github.repository == 'uber/NullAway' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2
      - name: Cache Gradle caches
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-caches-
      - name: Cache Gradle wrapper
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlew-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradlew-wrapper-
      - name: 'Set up JDK 8'
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: 'Publish'
        env:
          ORG_GRADLE_PROJECT_mavenCentralRepositoryUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralRepositoryPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
        run: ./gradlew clean publish
