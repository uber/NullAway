/*
 * Copyright (C) 2021. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'jacoco'
    id 'jacoco-report-aggregation'
    id 'com.github.kt3k.coveralls'
}

// Use JDK 17 for this module, via a toolchain.  We need JDK 17 since this module
// depends on jdk17-unit-tests.
// We must null out sourceCompatibility and targetCompatibility to use toolchains.
java.sourceCompatibility = null
java.targetCompatibility = null
java.toolchain.languageVersion.set JavaLanguageVersion.of(17)

// A resolvable configuration to collect source code
//def sourcesPath = configurations.create("sourcesPath") {
//    visible = false
//    canBeResolved = true
//    canBeConsumed = false
//    extendsFrom(configurations.implementation)
//    attributes {
//        attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))
//        attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category, Category.DOCUMENTATION))
//        attribute(DocsType.DOCS_TYPE_ATTRIBUTE, objects.named(DocsType, 'source-folders'))
//    }
//}
coveralls {
    jacocoReportPath = "build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml"
//    afterEvaluate {
//        sourceDirs = sourcesPath.incoming.artifactView { lenient(true) }.files as List<String>
//    }
}

def coverallsTask = tasks.named('coveralls')

coverallsTask.configure {
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
}

// These dependencies indicate which projects have tests or tested code we want to include
// when computing overall coverage.  We aim to measure coverage for all code that actually ships
// in a Maven artifact (so, e.g., we do not measure coverage for the jmh module)
dependencies {
    implementation project(':nullaway')
    implementation project(':jar-infer:jar-infer-lib')
    implementation project(':jar-infer:nullaway-integration-test')
    implementation project(':jdk17-unit-tests')
}
