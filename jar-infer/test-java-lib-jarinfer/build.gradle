/*
 * Copyright (C) 2017. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "java-library"
}

def outputAstubxFile = layout.buildDirectory.file("generated/jarinfer/jarinfer.astubx")

def baseJar = tasks.register('baseJar', Jar) {
    archiveClassifier.set('base')
    from sourceSets.main.output
}

def cliProj = project(":jar-infer:jar-infer-cli")
def shadowJarTask = cliProj.tasks.named(
        "shadowJar",
        com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
        )
def jarInferCliJar = shadowJarTask.flatMap { it.archiveFile }

def generateJarInferAstubx = tasks.register('generateJarInferAstubx', Exec) {
    dependsOn(baseJar, shadowJarTask)

    def baseJarFile = baseJar.flatMap { it.archiveFile }
    inputs.files(baseJarFile, jarInferCliJar)
    outputs.file(outputAstubxFile)

    doFirst {
        // use the same java as Gradle itself
        def javaBin = new File(System.getProperty("java.home"), "bin/java")

        commandLine javaBin.absolutePath,
                "-jar",
                jarInferCliJar.get().asFile.absolutePath,
                "-i", baseJarFile.get().asFile.absolutePath,
                "-o", outputAstubxFile.get().asFile.absolutePath
    }
}

jar {
    manifest {
        attributes(
                'Created-By' : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'  : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'   : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
                )
    }
    dependsOn(generateJarInferAstubx)
    from(outputAstubxFile) {
        into("com/uber/nullaway/jarinfer/provider")
    }
}

dependencies {
    compileOnly deps.apt.autoService
    annotationProcessor deps.apt.autoService
    compileOnly project(":nullaway")
    api deps.build.jspecify
}
