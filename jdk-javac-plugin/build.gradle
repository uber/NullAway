plugins {
    id 'java'
    // we use the shadow jar when building the JDK
    id 'com.github.johnrengelman.shadow'
    id 'nullaway.java-test-conventions'
}

// Use JDK 21 for this module, via a toolchain
// We must null out sourceCompatibility and targetCompatibility to use toolchains.
java.sourceCompatibility = null
java.targetCompatibility = null
java.toolchain.languageVersion.set JavaLanguageVersion.of(21)

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
        "--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.source.tree=ALL-UNNAMED",
    ]
}

configurations {
    // We use this configuration to expose a module path that can be
    // used to test handling of modules
    testModulePath
}

dependencies {
    implementation deps.build.gson

    testImplementation deps.test.junit4
    testImplementation(deps.build.errorProneTestHelpers) {
        exclude group: "junit", module: "junit"
    }
    testImplementation deps.build.jspecify
    testImplementation deps.build.gson
    testImplementation deps.test.assertJ

    testModulePath deps.build.jspecify
}

tasks.withType(Test).configureEach { test ->
    test.jvmArgs += [
        // Expose a module path for tests as a JVM property.
        "-Dtest.module.path=${configurations.testModulePath.asPath}"
    ]
}
