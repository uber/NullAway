plugins {
    id 'java-library'
    id "me.champeau.jmh" version "0.6.5"
}

configurations {
    benchmarkSources
}
dependencies {

    // Depend on NullAway and Error Prone Core.  This allows us to use our classpath as the processor path
    // for the javac instance that needs to run NullAway
    implementation project(':nullaway')
    // use the same version of Error Prone Core that we are compiling NullAway against, so we can
    // benchmark against different versions of Error Prone
    implementation deps.build.errorProneCoreForApi

    // Source jars for our desired benchmarks
    benchmarkSources('com.github.ben-manes.caffeine:caffeine:3.0.2:sources') {
        transitive = false
    }

    testImplementation deps.test.junit4
}

def benchSourceDir = project.layout.buildDirectory.dir('benchmarkSources')

task extractBenchmarkSources(type: Copy) {
    // TODO update this to work with multiple benchmarks
    from zipTree(configurations.benchmarkSources.singleFile)
    into benchSourceDir
}

compileJava.dependsOn(extractBenchmarkSources)

jmh {
    // commented-out examples of how to tweak certain jmh parameters; they show the default values
    // for more examples see https://github.com/melix/jmh-gradle-plugin/blob/master/README.adoc#configuration-options
    // warmupIterations = 5
    // iterations = 5
    // fork = 5
    jvmArgsAppend = ["-Dnullaway.benchmark.sources=" + benchSourceDir.get()]

}
