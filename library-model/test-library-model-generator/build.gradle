/*
 * Copyright (C) 2024. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "java-library"
}

def testInputsPath = "${rootProject.projectDir}/library-model/test-library-model-generator/src/main/resources/sample_annotated/src"
def outputAstubxFile = layout.buildDirectory.file("generated/libmodels/libmodels.astubx")

def cliProj = project(":library-model:library-model-generator-cli")
def shadowJarTask = cliProj.tasks.named("shadowJar", com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar)
def libModelCliJar = shadowJarTask.flatMap { it.archiveFile }

def generateLibModelsAstubx = tasks.register('generateLibModelsAstubx', Exec) {
    dependsOn(shadowJarTask)
    doFirst {
        // use the same java as Gradle itself
        def javaBin = new File(System.getProperty("java.home"), "bin/java")

        commandLine javaBin.absolutePath,
                "-jar",
                libModelCliJar.get().asFile.absolutePath,
                testInputsPath,
                outputAstubxFile.get().asFile.absolutePath
    }
}

jar {
    manifest {
        attributes(
                'Created-By'     : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
                )
    }
    dependsOn(generateLibModelsAstubx)
    from(outputAstubxFile) {
        into("com/uber/nullaway/libmodel/provider")
    }
}


dependencies {
    compileOnly deps.apt.autoService
    annotationProcessor deps.apt.autoService
    compileOnly project(":nullaway")
    api deps.build.jspecify
}
