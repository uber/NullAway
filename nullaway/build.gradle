/*
 * Copyright (C) 2017. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import net.ltgt.gradle.errorprone.CheckSeverity

plugins {
  id 'java-library'
  // For code coverage:
  id 'jacoco'
  id 'com.github.nbaztec.coveralls-jacoco'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

dependencies {
    compileOnly deps.apt.autoValueAnnot
    annotationProcessor deps.apt.autoValue
    compileOnly deps.apt.autoServiceAnnot
    annotationProcessor deps.apt.autoService

    compileOnly deps.build.errorProneCheckApi
    implementation deps.build.checkerDataflow
    implementation deps.build.guava

    testImplementation deps.test.junit4
    testImplementation(deps.build.errorProneTestHelpers) {
        exclude group: "junit", module: "junit"
    }
    testImplementation deps.test.jetbrainsAnnotations
    testImplementation deps.test.junit5Jupiter
    testImplementation deps.test.cfQual
    testImplementation deps.test.cfCompatQual
    testImplementation project(":test-java-lib")
    testImplementation deps.test.inferAnnotations
    testImplementation deps.apt.jakartaInject
    testImplementation deps.apt.javaxInject
    testImplementation deps.test.rxjava2
    testImplementation deps.test.commonsLang
    testImplementation deps.test.commonsLang3
    testImplementation project(":test-library-models")
    testImplementation deps.test.lombok
}

javadoc {
    failOnError = false
}


test {
  maxHeapSize = "1024m"
  if (!JavaVersion.current().java9Compatible) {
    jvmArgs "-Xbootclasspath/p:${configurations.errorproneJavac.asPath}"
  }
}

apply plugin: 'com.vanniktech.maven.publish'

jacoco {
  toolVersion = "0.8.2"
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

coverallsJacoco {
    reportPath = "nullaway/build/reports/jacoco/test/jacocoTestReport.xml"
}
